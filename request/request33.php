<?php 
//https://cargotsi.mercurygate.net/MercuryGate/common/remoteService.jsp?userid=ProtoWSID&password=ProtoWebSvc2016!;
$request = '<service-request>
              <service-id>WebExtractTransportDeep</service-id>
              <!-- The <request-id> tag is populated with a unique String (generated by caller); This number is used for troubleshooting purposes. -->
              <request-id>20141204-Test-3</request-id>
              <data>
              <!-- The Oid value is found using the OidLookup request. -->
                <oid>27682980122</oid>
              </data>
            </service-request>';

$request2 = '<service-request>
              <service-id>WebExtractTransportDeep</service-id>
              <!-- The <request-id> tag is populated with a unique String (generated by caller); This number is used for troubleshooting purposes. -->
              <request-id>20141204-Test-3</request-id>
              <data>
              <!-- The Oid value is found using the OidLookup request. -->
                <oid>27683130115</oid>
              </data>
            </service-request>';

$request3 = '<service-request>
              <service-id>WebExtractTransportDeep</service-id>
              <!-- The <request-id> tag is populated with a unique String (generated by caller); This number is used for troubleshooting purposes. -->
              <request-id>20141204-Test-3</request-id>
              <data>
              <!-- The Oid value is found using the OidLookup request. -->
                <oid>27683519352</oid>
              </data>
            </service-request>';

$request4 = '<service-request>
              <service-id>WebExtractTransportDeep</service-id>
              <!-- The <request-id> tag is populated with a unique String (generated by caller); This number is used for troubleshooting purposes. -->
              <request-id>20141204-Test-3</request-id>
              <data>
              <!-- The Oid value is found using the OidLookup request. -->
                <oid>27683839442</oid>
              </data>
            </service-request>';


$request5 = '<service-request>
              <service-id>WebExtractTransportDeep</service-id>
              <!-- The <request-id> tag is populated with a unique String (generated by caller); This number is used for troubleshooting purposes. -->
              <request-id>20141204-Test-3</request-id>
              <data>
              <!-- The Oid value is found using the OidLookup request. -->
                <oid>27684014987</oid>
              </data>
            </service-request>';


$params = array(
                      "userid" => "ProtoWSID",
                      "password" => "ProtoWebSvc2016!",
                      "request" => urlencode($request)
                  );

foreach ($params as $k => $v) {
              $postData .= $k . '=' . $v . '&';
          };

rtrim($postData, '&');

$params2 = array(
                      "userid" => "ProtoWSID",
                      "password" => "ProtoWebSvc2016!",
                      "request" => urlencode($request2)
                  );

foreach ($params2 as $k2 => $v2) {
              $postData2 .= $k2 . '=' . $v2 . '&';
          };

rtrim($postData2, '&');

$params3 = array(
                      "userid" => "ProtoWSID",
                      "password" => "ProtoWebSvc2016!",
                      "request" => urlencode($request3)
                  );

foreach ($params3 as $k3 => $v3) {
              $postData3 .= $k3 . '=' . $v3 . '&';
          };

rtrim($postData3, '&');

$params4 = array(
                      "userid" => "ProtoWSID",
                      "password" => "ProtoWebSvc2016!",
                      "request" => urlencode($request4)
                  );

foreach ($params4 as $k4 => $v4) {
              $postData4 .= $k4 . '=' . $v4 . '&';
          };

rtrim($postData4, '&');

$params5 = array(
                      "userid" => "ProtoWSID",
                      "password" => "ProtoWebSvc2016!",
                      "request" => urlencode($request5)
                  );

foreach ($params5 as $k5 => $v5) {
              $postData5 .= $k5 . '=' . $v5 . '&';
          };

rtrim($postData5, '&');

// build the individual requests, but do not execute them
$ch_1 = curl_init('https://cargotsi.mercurygate.net/MercuryGate/common/remoteService.jsp?');
$ch_2 = curl_init('https://cargotsi.mercurygate.net/MercuryGate/common/remoteService.jsp?');
$ch_3 = curl_init('https://cargotsi.mercurygate.net/MercuryGate/common/remoteService.jsp?');
$ch_4 = curl_init('https://cargotsi.mercurygate.net/MercuryGate/common/remoteService.jsp?');
$ch_5 = curl_init('https://cargotsi.mercurygate.net/MercuryGate/common/remoteService.jsp?');
curl_setopt($ch_1, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch_1, CURLOPT_POST, count($postData));
curl_setopt($ch_1, CURLOPT_POSTFIELDS, $postData);

curl_setopt($ch_2, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch_2, CURLOPT_POST, count($postData2));
curl_setopt($ch_2, CURLOPT_POSTFIELDS, $postData2);

curl_setopt($ch_3, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch_3, CURLOPT_POST, count($postData3));
curl_setopt($ch_3, CURLOPT_POSTFIELDS, $postData3);

curl_setopt($ch_4, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch_4, CURLOPT_POST, count($postData4));
curl_setopt($ch_4, CURLOPT_POSTFIELDS, $postData4);

curl_setopt($ch_5, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch_5, CURLOPT_POST, count($postData5));
curl_setopt($ch_5, CURLOPT_POSTFIELDS, $postData5);
  
// build the multi-curl handle, adding both $ch
$mh = curl_multi_init();
curl_multi_add_handle($mh, $ch_1);
curl_multi_add_handle($mh, $ch_2);
curl_multi_add_handle($mh, $ch_3);
curl_multi_add_handle($mh, $ch_4);
curl_multi_add_handle($mh, $ch_5);
  
// execute all queries simultaneously, and continue when all are complete
  $running = null;
  do {
    curl_multi_exec($mh, $running);
  } while ($running);

//close the handles
curl_multi_remove_handle($mh, $ch1);
curl_multi_remove_handle($mh, $ch2);
curl_multi_remove_handle($mh, $ch3);
curl_multi_remove_handle($mh, $ch4);
curl_multi_remove_handle($mh, $ch5);
curl_multi_close($mh);
  
// all of our requests are done, we can now access the results
$response_1 = curl_multi_getcontent($ch_1);
$response_2 = curl_multi_getcontent($ch_2);
$response_3 = curl_multi_getcontent($ch_3);
$response_4 = curl_multi_getcontent($ch_4);
$response_5 = curl_multi_getcontent($ch_5);

echo base64_decode($response_1).base64_decode($response_2).base64_decode($response_3).base64_decode($response_4).base64_decode($response_5); // output results

?>